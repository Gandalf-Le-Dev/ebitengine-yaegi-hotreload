// Code generated by 'yaegi extract github.com/hajimehoshi/ebiten/v2'. DO NOT EDIT.

package symbols

import (
	"github.com/hajimehoshi/ebiten/v2"
	"go/constant"
	"go/token"
	"image"
	"image/color"
	"reflect"
)

func init() {
	Symbols["github.com/hajimehoshi/ebiten/v2/ebiten"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ActualFPS":                              reflect.ValueOf(ebiten.ActualFPS),
		"ActualTPS":                              reflect.ValueOf(ebiten.ActualTPS),
		"AddressClampToZero":                     reflect.ValueOf(ebiten.AddressClampToZero),
		"AddressRepeat":                          reflect.ValueOf(ebiten.AddressRepeat),
		"AddressUnsafe":                          reflect.ValueOf(ebiten.AddressUnsafe),
		"AppendGamepadIDs":                       reflect.ValueOf(ebiten.AppendGamepadIDs),
		"AppendInputChars":                       reflect.ValueOf(ebiten.AppendInputChars),
		"AppendMonitors":                         reflect.ValueOf(ebiten.AppendMonitors),
		"AppendTouchIDs":                         reflect.ValueOf(ebiten.AppendTouchIDs),
		"BlendClear":                             reflect.ValueOf(&ebiten.BlendClear).Elem(),
		"BlendCopy":                              reflect.ValueOf(&ebiten.BlendCopy).Elem(),
		"BlendDestination":                       reflect.ValueOf(&ebiten.BlendDestination).Elem(),
		"BlendDestinationAtop":                   reflect.ValueOf(&ebiten.BlendDestinationAtop).Elem(),
		"BlendDestinationIn":                     reflect.ValueOf(&ebiten.BlendDestinationIn).Elem(),
		"BlendDestinationOut":                    reflect.ValueOf(&ebiten.BlendDestinationOut).Elem(),
		"BlendDestinationOver":                   reflect.ValueOf(&ebiten.BlendDestinationOver).Elem(),
		"BlendFactorDefault":                     reflect.ValueOf(ebiten.BlendFactorDefault),
		"BlendFactorDestinationAlpha":            reflect.ValueOf(ebiten.BlendFactorDestinationAlpha),
		"BlendFactorDestinationColor":            reflect.ValueOf(ebiten.BlendFactorDestinationColor),
		"BlendFactorOne":                         reflect.ValueOf(ebiten.BlendFactorOne),
		"BlendFactorOneMinusDestinationAlpha":    reflect.ValueOf(ebiten.BlendFactorOneMinusDestinationAlpha),
		"BlendFactorOneMinusDestinationColor":    reflect.ValueOf(ebiten.BlendFactorOneMinusDestinationColor),
		"BlendFactorOneMinusSourceAlpha":         reflect.ValueOf(ebiten.BlendFactorOneMinusSourceAlpha),
		"BlendFactorOneMinusSourceColor":         reflect.ValueOf(ebiten.BlendFactorOneMinusSourceColor),
		"BlendFactorSourceAlpha":                 reflect.ValueOf(ebiten.BlendFactorSourceAlpha),
		"BlendFactorSourceColor":                 reflect.ValueOf(ebiten.BlendFactorSourceColor),
		"BlendFactorZero":                        reflect.ValueOf(ebiten.BlendFactorZero),
		"BlendLighter":                           reflect.ValueOf(&ebiten.BlendLighter).Elem(),
		"BlendOperationAdd":                      reflect.ValueOf(ebiten.BlendOperationAdd),
		"BlendOperationMax":                      reflect.ValueOf(ebiten.BlendOperationMax),
		"BlendOperationMin":                      reflect.ValueOf(ebiten.BlendOperationMin),
		"BlendOperationReverseSubtract":          reflect.ValueOf(ebiten.BlendOperationReverseSubtract),
		"BlendOperationSubtract":                 reflect.ValueOf(ebiten.BlendOperationSubtract),
		"BlendSourceAtop":                        reflect.ValueOf(&ebiten.BlendSourceAtop).Elem(),
		"BlendSourceIn":                          reflect.ValueOf(&ebiten.BlendSourceIn).Elem(),
		"BlendSourceOut":                         reflect.ValueOf(&ebiten.BlendSourceOut).Elem(),
		"BlendSourceOver":                        reflect.ValueOf(&ebiten.BlendSourceOver).Elem(),
		"BlendXor":                               reflect.ValueOf(&ebiten.BlendXor).Elem(),
		"ColorMDim":                              reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"ColorScaleModePremultipliedAlpha":       reflect.ValueOf(ebiten.ColorScaleModePremultipliedAlpha),
		"ColorScaleModeStraightAlpha":            reflect.ValueOf(ebiten.ColorScaleModeStraightAlpha),
		"CompositeModeClear":                     reflect.ValueOf(ebiten.CompositeModeClear),
		"CompositeModeCopy":                      reflect.ValueOf(ebiten.CompositeModeCopy),
		"CompositeModeCustom":                    reflect.ValueOf(ebiten.CompositeModeCustom),
		"CompositeModeDestination":               reflect.ValueOf(ebiten.CompositeModeDestination),
		"CompositeModeDestinationAtop":           reflect.ValueOf(ebiten.CompositeModeDestinationAtop),
		"CompositeModeDestinationIn":             reflect.ValueOf(ebiten.CompositeModeDestinationIn),
		"CompositeModeDestinationOut":            reflect.ValueOf(ebiten.CompositeModeDestinationOut),
		"CompositeModeDestinationOver":           reflect.ValueOf(ebiten.CompositeModeDestinationOver),
		"CompositeModeLighter":                   reflect.ValueOf(ebiten.CompositeModeLighter),
		"CompositeModeMultiply":                  reflect.ValueOf(ebiten.CompositeModeMultiply),
		"CompositeModeSourceAtop":                reflect.ValueOf(ebiten.CompositeModeSourceAtop),
		"CompositeModeSourceIn":                  reflect.ValueOf(ebiten.CompositeModeSourceIn),
		"CompositeModeSourceOut":                 reflect.ValueOf(ebiten.CompositeModeSourceOut),
		"CompositeModeSourceOver":                reflect.ValueOf(ebiten.CompositeModeSourceOver),
		"CompositeModeXor":                       reflect.ValueOf(ebiten.CompositeModeXor),
		"CurrentFPS":                             reflect.ValueOf(ebiten.CurrentFPS),
		"CurrentTPS":                             reflect.ValueOf(ebiten.CurrentTPS),
		"CursorMode":                             reflect.ValueOf(ebiten.CursorMode),
		"CursorModeCaptured":                     reflect.ValueOf(ebiten.CursorModeCaptured),
		"CursorModeHidden":                       reflect.ValueOf(ebiten.CursorModeHidden),
		"CursorModeVisible":                      reflect.ValueOf(ebiten.CursorModeVisible),
		"CursorPosition":                         reflect.ValueOf(ebiten.CursorPosition),
		"CursorShape":                            reflect.ValueOf(ebiten.CursorShape),
		"CursorShapeCrosshair":                   reflect.ValueOf(ebiten.CursorShapeCrosshair),
		"CursorShapeDefault":                     reflect.ValueOf(ebiten.CursorShapeDefault),
		"CursorShapeEWResize":                    reflect.ValueOf(ebiten.CursorShapeEWResize),
		"CursorShapeMove":                        reflect.ValueOf(ebiten.CursorShapeMove),
		"CursorShapeNESWResize":                  reflect.ValueOf(ebiten.CursorShapeNESWResize),
		"CursorShapeNSResize":                    reflect.ValueOf(ebiten.CursorShapeNSResize),
		"CursorShapeNWSEResize":                  reflect.ValueOf(ebiten.CursorShapeNWSEResize),
		"CursorShapeNotAllowed":                  reflect.ValueOf(ebiten.CursorShapeNotAllowed),
		"CursorShapePointer":                     reflect.ValueOf(ebiten.CursorShapePointer),
		"CursorShapeText":                        reflect.ValueOf(ebiten.CursorShapeText),
		"DefaultTPS":                             reflect.ValueOf(constant.MakeFromLiteral("60", token.INT, 0)),
		"DeviceScaleFactor":                      reflect.ValueOf(ebiten.DeviceScaleFactor),
		"DroppedFiles":                           reflect.ValueOf(ebiten.DroppedFiles),
		"EvenOdd":                                reflect.ValueOf(ebiten.EvenOdd),
		"FPSMode":                                reflect.ValueOf(ebiten.FPSMode),
		"FPSModeVsyncOffMaximum":                 reflect.ValueOf(ebiten.FPSModeVsyncOffMaximum),
		"FPSModeVsyncOffMinimum":                 reflect.ValueOf(ebiten.FPSModeVsyncOffMinimum),
		"FPSModeVsyncOn":                         reflect.ValueOf(ebiten.FPSModeVsyncOn),
		"FillAll":                                reflect.ValueOf(ebiten.FillAll),
		"FilterLinear":                           reflect.ValueOf(ebiten.FilterLinear),
		"FilterNearest":                          reflect.ValueOf(ebiten.FilterNearest),
		"GamepadAxis":                            reflect.ValueOf(ebiten.GamepadAxis),
		"GamepadAxisCount":                       reflect.ValueOf(ebiten.GamepadAxisCount),
		"GamepadAxisNum":                         reflect.ValueOf(ebiten.GamepadAxisNum),
		"GamepadAxisValue":                       reflect.ValueOf(ebiten.GamepadAxisValue),
		"GamepadButton0":                         reflect.ValueOf(ebiten.GamepadButton0),
		"GamepadButton1":                         reflect.ValueOf(ebiten.GamepadButton1),
		"GamepadButton10":                        reflect.ValueOf(ebiten.GamepadButton10),
		"GamepadButton11":                        reflect.ValueOf(ebiten.GamepadButton11),
		"GamepadButton12":                        reflect.ValueOf(ebiten.GamepadButton12),
		"GamepadButton13":                        reflect.ValueOf(ebiten.GamepadButton13),
		"GamepadButton14":                        reflect.ValueOf(ebiten.GamepadButton14),
		"GamepadButton15":                        reflect.ValueOf(ebiten.GamepadButton15),
		"GamepadButton16":                        reflect.ValueOf(ebiten.GamepadButton16),
		"GamepadButton17":                        reflect.ValueOf(ebiten.GamepadButton17),
		"GamepadButton18":                        reflect.ValueOf(ebiten.GamepadButton18),
		"GamepadButton19":                        reflect.ValueOf(ebiten.GamepadButton19),
		"GamepadButton2":                         reflect.ValueOf(ebiten.GamepadButton2),
		"GamepadButton20":                        reflect.ValueOf(ebiten.GamepadButton20),
		"GamepadButton21":                        reflect.ValueOf(ebiten.GamepadButton21),
		"GamepadButton22":                        reflect.ValueOf(ebiten.GamepadButton22),
		"GamepadButton23":                        reflect.ValueOf(ebiten.GamepadButton23),
		"GamepadButton24":                        reflect.ValueOf(ebiten.GamepadButton24),
		"GamepadButton25":                        reflect.ValueOf(ebiten.GamepadButton25),
		"GamepadButton26":                        reflect.ValueOf(ebiten.GamepadButton26),
		"GamepadButton27":                        reflect.ValueOf(ebiten.GamepadButton27),
		"GamepadButton28":                        reflect.ValueOf(ebiten.GamepadButton28),
		"GamepadButton29":                        reflect.ValueOf(ebiten.GamepadButton29),
		"GamepadButton3":                         reflect.ValueOf(ebiten.GamepadButton3),
		"GamepadButton30":                        reflect.ValueOf(ebiten.GamepadButton30),
		"GamepadButton31":                        reflect.ValueOf(ebiten.GamepadButton31),
		"GamepadButton4":                         reflect.ValueOf(ebiten.GamepadButton4),
		"GamepadButton5":                         reflect.ValueOf(ebiten.GamepadButton5),
		"GamepadButton6":                         reflect.ValueOf(ebiten.GamepadButton6),
		"GamepadButton7":                         reflect.ValueOf(ebiten.GamepadButton7),
		"GamepadButton8":                         reflect.ValueOf(ebiten.GamepadButton8),
		"GamepadButton9":                         reflect.ValueOf(ebiten.GamepadButton9),
		"GamepadButtonCount":                     reflect.ValueOf(ebiten.GamepadButtonCount),
		"GamepadButtonMax":                       reflect.ValueOf(ebiten.GamepadButtonMax),
		"GamepadButtonNum":                       reflect.ValueOf(ebiten.GamepadButtonNum),
		"GamepadIDs":                             reflect.ValueOf(ebiten.GamepadIDs),
		"GamepadName":                            reflect.ValueOf(ebiten.GamepadName),
		"GamepadSDLID":                           reflect.ValueOf(ebiten.GamepadSDLID),
		"GeoMDim":                                reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"GraphicsLibraryAuto":                    reflect.ValueOf(ebiten.GraphicsLibraryAuto),
		"GraphicsLibraryDirectX":                 reflect.ValueOf(ebiten.GraphicsLibraryDirectX),
		"GraphicsLibraryMetal":                   reflect.ValueOf(ebiten.GraphicsLibraryMetal),
		"GraphicsLibraryOpenGL":                  reflect.ValueOf(ebiten.GraphicsLibraryOpenGL),
		"GraphicsLibraryPlayStation5":            reflect.ValueOf(ebiten.GraphicsLibraryPlayStation5),
		"GraphicsLibraryUnknown":                 reflect.ValueOf(ebiten.GraphicsLibraryUnknown),
		"InputChars":                             reflect.ValueOf(ebiten.InputChars),
		"IsFocused":                              reflect.ValueOf(ebiten.IsFocused),
		"IsFullscreen":                           reflect.ValueOf(ebiten.IsFullscreen),
		"IsGamepadButtonPressed":                 reflect.ValueOf(ebiten.IsGamepadButtonPressed),
		"IsKeyPressed":                           reflect.ValueOf(ebiten.IsKeyPressed),
		"IsMouseButtonPressed":                   reflect.ValueOf(ebiten.IsMouseButtonPressed),
		"IsRunnableOnUnfocused":                  reflect.ValueOf(ebiten.IsRunnableOnUnfocused),
		"IsScreenClearedEveryFrame":              reflect.ValueOf(ebiten.IsScreenClearedEveryFrame),
		"IsScreenFilterEnabled":                  reflect.ValueOf(ebiten.IsScreenFilterEnabled),
		"IsScreenTransparent":                    reflect.ValueOf(ebiten.IsScreenTransparent),
		"IsStandardGamepadAxisAvailable":         reflect.ValueOf(ebiten.IsStandardGamepadAxisAvailable),
		"IsStandardGamepadButtonAvailable":       reflect.ValueOf(ebiten.IsStandardGamepadButtonAvailable),
		"IsStandardGamepadButtonPressed":         reflect.ValueOf(ebiten.IsStandardGamepadButtonPressed),
		"IsStandardGamepadLayoutAvailable":       reflect.ValueOf(ebiten.IsStandardGamepadLayoutAvailable),
		"IsVsyncEnabled":                         reflect.ValueOf(ebiten.IsVsyncEnabled),
		"IsWindowBeingClosed":                    reflect.ValueOf(ebiten.IsWindowBeingClosed),
		"IsWindowClosingHandled":                 reflect.ValueOf(ebiten.IsWindowClosingHandled),
		"IsWindowDecorated":                      reflect.ValueOf(ebiten.IsWindowDecorated),
		"IsWindowFloating":                       reflect.ValueOf(ebiten.IsWindowFloating),
		"IsWindowMaximized":                      reflect.ValueOf(ebiten.IsWindowMaximized),
		"IsWindowMinimized":                      reflect.ValueOf(ebiten.IsWindowMinimized),
		"IsWindowMousePassthrough":               reflect.ValueOf(ebiten.IsWindowMousePassthrough),
		"IsWindowResizable":                      reflect.ValueOf(ebiten.IsWindowResizable),
		"Key0":                                   reflect.ValueOf(ebiten.Key0),
		"Key1":                                   reflect.ValueOf(ebiten.Key1),
		"Key2":                                   reflect.ValueOf(ebiten.Key2),
		"Key3":                                   reflect.ValueOf(ebiten.Key3),
		"Key4":                                   reflect.ValueOf(ebiten.Key4),
		"Key5":                                   reflect.ValueOf(ebiten.Key5),
		"Key6":                                   reflect.ValueOf(ebiten.Key6),
		"Key7":                                   reflect.ValueOf(ebiten.Key7),
		"Key8":                                   reflect.ValueOf(ebiten.Key8),
		"Key9":                                   reflect.ValueOf(ebiten.Key9),
		"KeyA":                                   reflect.ValueOf(ebiten.KeyA),
		"KeyAlt":                                 reflect.ValueOf(ebiten.KeyAlt),
		"KeyAltLeft":                             reflect.ValueOf(ebiten.KeyAltLeft),
		"KeyAltRight":                            reflect.ValueOf(ebiten.KeyAltRight),
		"KeyApostrophe":                          reflect.ValueOf(ebiten.KeyApostrophe),
		"KeyArrowDown":                           reflect.ValueOf(ebiten.KeyArrowDown),
		"KeyArrowLeft":                           reflect.ValueOf(ebiten.KeyArrowLeft),
		"KeyArrowRight":                          reflect.ValueOf(ebiten.KeyArrowRight),
		"KeyArrowUp":                             reflect.ValueOf(ebiten.KeyArrowUp),
		"KeyB":                                   reflect.ValueOf(ebiten.KeyB),
		"KeyBackquote":                           reflect.ValueOf(ebiten.KeyBackquote),
		"KeyBackslash":                           reflect.ValueOf(ebiten.KeyBackslash),
		"KeyBackspace":                           reflect.ValueOf(ebiten.KeyBackspace),
		"KeyBracketLeft":                         reflect.ValueOf(ebiten.KeyBracketLeft),
		"KeyBracketRight":                        reflect.ValueOf(ebiten.KeyBracketRight),
		"KeyC":                                   reflect.ValueOf(ebiten.KeyC),
		"KeyCapsLock":                            reflect.ValueOf(ebiten.KeyCapsLock),
		"KeyComma":                               reflect.ValueOf(ebiten.KeyComma),
		"KeyContextMenu":                         reflect.ValueOf(ebiten.KeyContextMenu),
		"KeyControl":                             reflect.ValueOf(ebiten.KeyControl),
		"KeyControlLeft":                         reflect.ValueOf(ebiten.KeyControlLeft),
		"KeyControlRight":                        reflect.ValueOf(ebiten.KeyControlRight),
		"KeyD":                                   reflect.ValueOf(ebiten.KeyD),
		"KeyDelete":                              reflect.ValueOf(ebiten.KeyDelete),
		"KeyDigit0":                              reflect.ValueOf(ebiten.KeyDigit0),
		"KeyDigit1":                              reflect.ValueOf(ebiten.KeyDigit1),
		"KeyDigit2":                              reflect.ValueOf(ebiten.KeyDigit2),
		"KeyDigit3":                              reflect.ValueOf(ebiten.KeyDigit3),
		"KeyDigit4":                              reflect.ValueOf(ebiten.KeyDigit4),
		"KeyDigit5":                              reflect.ValueOf(ebiten.KeyDigit5),
		"KeyDigit6":                              reflect.ValueOf(ebiten.KeyDigit6),
		"KeyDigit7":                              reflect.ValueOf(ebiten.KeyDigit7),
		"KeyDigit8":                              reflect.ValueOf(ebiten.KeyDigit8),
		"KeyDigit9":                              reflect.ValueOf(ebiten.KeyDigit9),
		"KeyDown":                                reflect.ValueOf(ebiten.KeyDown),
		"KeyE":                                   reflect.ValueOf(ebiten.KeyE),
		"KeyEnd":                                 reflect.ValueOf(ebiten.KeyEnd),
		"KeyEnter":                               reflect.ValueOf(ebiten.KeyEnter),
		"KeyEqual":                               reflect.ValueOf(ebiten.KeyEqual),
		"KeyEscape":                              reflect.ValueOf(ebiten.KeyEscape),
		"KeyF":                                   reflect.ValueOf(ebiten.KeyF),
		"KeyF1":                                  reflect.ValueOf(ebiten.KeyF1),
		"KeyF10":                                 reflect.ValueOf(ebiten.KeyF10),
		"KeyF11":                                 reflect.ValueOf(ebiten.KeyF11),
		"KeyF12":                                 reflect.ValueOf(ebiten.KeyF12),
		"KeyF13":                                 reflect.ValueOf(ebiten.KeyF13),
		"KeyF14":                                 reflect.ValueOf(ebiten.KeyF14),
		"KeyF15":                                 reflect.ValueOf(ebiten.KeyF15),
		"KeyF16":                                 reflect.ValueOf(ebiten.KeyF16),
		"KeyF17":                                 reflect.ValueOf(ebiten.KeyF17),
		"KeyF18":                                 reflect.ValueOf(ebiten.KeyF18),
		"KeyF19":                                 reflect.ValueOf(ebiten.KeyF19),
		"KeyF2":                                  reflect.ValueOf(ebiten.KeyF2),
		"KeyF20":                                 reflect.ValueOf(ebiten.KeyF20),
		"KeyF21":                                 reflect.ValueOf(ebiten.KeyF21),
		"KeyF22":                                 reflect.ValueOf(ebiten.KeyF22),
		"KeyF23":                                 reflect.ValueOf(ebiten.KeyF23),
		"KeyF24":                                 reflect.ValueOf(ebiten.KeyF24),
		"KeyF3":                                  reflect.ValueOf(ebiten.KeyF3),
		"KeyF4":                                  reflect.ValueOf(ebiten.KeyF4),
		"KeyF5":                                  reflect.ValueOf(ebiten.KeyF5),
		"KeyF6":                                  reflect.ValueOf(ebiten.KeyF6),
		"KeyF7":                                  reflect.ValueOf(ebiten.KeyF7),
		"KeyF8":                                  reflect.ValueOf(ebiten.KeyF8),
		"KeyF9":                                  reflect.ValueOf(ebiten.KeyF9),
		"KeyG":                                   reflect.ValueOf(ebiten.KeyG),
		"KeyGraveAccent":                         reflect.ValueOf(ebiten.KeyGraveAccent),
		"KeyH":                                   reflect.ValueOf(ebiten.KeyH),
		"KeyHome":                                reflect.ValueOf(ebiten.KeyHome),
		"KeyI":                                   reflect.ValueOf(ebiten.KeyI),
		"KeyInsert":                              reflect.ValueOf(ebiten.KeyInsert),
		"KeyIntlBackslash":                       reflect.ValueOf(ebiten.KeyIntlBackslash),
		"KeyJ":                                   reflect.ValueOf(ebiten.KeyJ),
		"KeyK":                                   reflect.ValueOf(ebiten.KeyK),
		"KeyKP0":                                 reflect.ValueOf(ebiten.KeyKP0),
		"KeyKP1":                                 reflect.ValueOf(ebiten.KeyKP1),
		"KeyKP2":                                 reflect.ValueOf(ebiten.KeyKP2),
		"KeyKP3":                                 reflect.ValueOf(ebiten.KeyKP3),
		"KeyKP4":                                 reflect.ValueOf(ebiten.KeyKP4),
		"KeyKP5":                                 reflect.ValueOf(ebiten.KeyKP5),
		"KeyKP6":                                 reflect.ValueOf(ebiten.KeyKP6),
		"KeyKP7":                                 reflect.ValueOf(ebiten.KeyKP7),
		"KeyKP8":                                 reflect.ValueOf(ebiten.KeyKP8),
		"KeyKP9":                                 reflect.ValueOf(ebiten.KeyKP9),
		"KeyKPAdd":                               reflect.ValueOf(ebiten.KeyKPAdd),
		"KeyKPDecimal":                           reflect.ValueOf(ebiten.KeyKPDecimal),
		"KeyKPDivide":                            reflect.ValueOf(ebiten.KeyKPDivide),
		"KeyKPEnter":                             reflect.ValueOf(ebiten.KeyKPEnter),
		"KeyKPEqual":                             reflect.ValueOf(ebiten.KeyKPEqual),
		"KeyKPMultiply":                          reflect.ValueOf(ebiten.KeyKPMultiply),
		"KeyKPSubtract":                          reflect.ValueOf(ebiten.KeyKPSubtract),
		"KeyL":                                   reflect.ValueOf(ebiten.KeyL),
		"KeyLeft":                                reflect.ValueOf(ebiten.KeyLeft),
		"KeyLeftBracket":                         reflect.ValueOf(ebiten.KeyLeftBracket),
		"KeyM":                                   reflect.ValueOf(ebiten.KeyM),
		"KeyMax":                                 reflect.ValueOf(ebiten.KeyMax),
		"KeyMenu":                                reflect.ValueOf(ebiten.KeyMenu),
		"KeyMeta":                                reflect.ValueOf(ebiten.KeyMeta),
		"KeyMetaLeft":                            reflect.ValueOf(ebiten.KeyMetaLeft),
		"KeyMetaRight":                           reflect.ValueOf(ebiten.KeyMetaRight),
		"KeyMinus":                               reflect.ValueOf(ebiten.KeyMinus),
		"KeyN":                                   reflect.ValueOf(ebiten.KeyN),
		"KeyName":                                reflect.ValueOf(ebiten.KeyName),
		"KeyNumLock":                             reflect.ValueOf(ebiten.KeyNumLock),
		"KeyNumpad0":                             reflect.ValueOf(ebiten.KeyNumpad0),
		"KeyNumpad1":                             reflect.ValueOf(ebiten.KeyNumpad1),
		"KeyNumpad2":                             reflect.ValueOf(ebiten.KeyNumpad2),
		"KeyNumpad3":                             reflect.ValueOf(ebiten.KeyNumpad3),
		"KeyNumpad4":                             reflect.ValueOf(ebiten.KeyNumpad4),
		"KeyNumpad5":                             reflect.ValueOf(ebiten.KeyNumpad5),
		"KeyNumpad6":                             reflect.ValueOf(ebiten.KeyNumpad6),
		"KeyNumpad7":                             reflect.ValueOf(ebiten.KeyNumpad7),
		"KeyNumpad8":                             reflect.ValueOf(ebiten.KeyNumpad8),
		"KeyNumpad9":                             reflect.ValueOf(ebiten.KeyNumpad9),
		"KeyNumpadAdd":                           reflect.ValueOf(ebiten.KeyNumpadAdd),
		"KeyNumpadDecimal":                       reflect.ValueOf(ebiten.KeyNumpadDecimal),
		"KeyNumpadDivide":                        reflect.ValueOf(ebiten.KeyNumpadDivide),
		"KeyNumpadEnter":                         reflect.ValueOf(ebiten.KeyNumpadEnter),
		"KeyNumpadEqual":                         reflect.ValueOf(ebiten.KeyNumpadEqual),
		"KeyNumpadMultiply":                      reflect.ValueOf(ebiten.KeyNumpadMultiply),
		"KeyNumpadSubtract":                      reflect.ValueOf(ebiten.KeyNumpadSubtract),
		"KeyO":                                   reflect.ValueOf(ebiten.KeyO),
		"KeyP":                                   reflect.ValueOf(ebiten.KeyP),
		"KeyPageDown":                            reflect.ValueOf(ebiten.KeyPageDown),
		"KeyPageUp":                              reflect.ValueOf(ebiten.KeyPageUp),
		"KeyPause":                               reflect.ValueOf(ebiten.KeyPause),
		"KeyPeriod":                              reflect.ValueOf(ebiten.KeyPeriod),
		"KeyPrintScreen":                         reflect.ValueOf(ebiten.KeyPrintScreen),
		"KeyQ":                                   reflect.ValueOf(ebiten.KeyQ),
		"KeyQuote":                               reflect.ValueOf(ebiten.KeyQuote),
		"KeyR":                                   reflect.ValueOf(ebiten.KeyR),
		"KeyRight":                               reflect.ValueOf(ebiten.KeyRight),
		"KeyRightBracket":                        reflect.ValueOf(ebiten.KeyRightBracket),
		"KeyS":                                   reflect.ValueOf(ebiten.KeyS),
		"KeyScrollLock":                          reflect.ValueOf(ebiten.KeyScrollLock),
		"KeySemicolon":                           reflect.ValueOf(ebiten.KeySemicolon),
		"KeyShift":                               reflect.ValueOf(ebiten.KeyShift),
		"KeyShiftLeft":                           reflect.ValueOf(ebiten.KeyShiftLeft),
		"KeyShiftRight":                          reflect.ValueOf(ebiten.KeyShiftRight),
		"KeySlash":                               reflect.ValueOf(ebiten.KeySlash),
		"KeySpace":                               reflect.ValueOf(ebiten.KeySpace),
		"KeyT":                                   reflect.ValueOf(ebiten.KeyT),
		"KeyTab":                                 reflect.ValueOf(ebiten.KeyTab),
		"KeyU":                                   reflect.ValueOf(ebiten.KeyU),
		"KeyUp":                                  reflect.ValueOf(ebiten.KeyUp),
		"KeyV":                                   reflect.ValueOf(ebiten.KeyV),
		"KeyW":                                   reflect.ValueOf(ebiten.KeyW),
		"KeyX":                                   reflect.ValueOf(ebiten.KeyX),
		"KeyY":                                   reflect.ValueOf(ebiten.KeyY),
		"KeyZ":                                   reflect.ValueOf(ebiten.KeyZ),
		"MaxIndicesCount":                        reflect.ValueOf(constant.MakeFromLiteral("65535", token.INT, 0)),
		"MaxIndicesNum":                          reflect.ValueOf(constant.MakeFromLiteral("65535", token.INT, 0)),
		"MaxTPS":                                 reflect.ValueOf(ebiten.MaxTPS),
		"MaxVertexCount":                         reflect.ValueOf(constant.MakeFromLiteral("4294967295", token.INT, 0)),
		"MaxVerticesCount":                       reflect.ValueOf(constant.MakeFromLiteral("4294967295", token.INT, 0)),
		"MaximizeWindow":                         reflect.ValueOf(ebiten.MaximizeWindow),
		"MinimizeWindow":                         reflect.ValueOf(ebiten.MinimizeWindow),
		"Monitor":                                reflect.ValueOf(ebiten.Monitor),
		"MouseButton0":                           reflect.ValueOf(ebiten.MouseButton0),
		"MouseButton1":                           reflect.ValueOf(ebiten.MouseButton1),
		"MouseButton2":                           reflect.ValueOf(ebiten.MouseButton2),
		"MouseButton3":                           reflect.ValueOf(ebiten.MouseButton3),
		"MouseButton4":                           reflect.ValueOf(ebiten.MouseButton4),
		"MouseButtonLeft":                        reflect.ValueOf(ebiten.MouseButtonLeft),
		"MouseButtonMax":                         reflect.ValueOf(ebiten.MouseButtonMax),
		"MouseButtonMiddle":                      reflect.ValueOf(ebiten.MouseButtonMiddle),
		"MouseButtonRight":                       reflect.ValueOf(ebiten.MouseButtonRight),
		"NewImage":                               reflect.ValueOf(ebiten.NewImage),
		"NewImageFromImage":                      reflect.ValueOf(ebiten.NewImageFromImage),
		"NewImageFromImageWithOptions":           reflect.ValueOf(ebiten.NewImageFromImageWithOptions),
		"NewImageWithOptions":                    reflect.ValueOf(ebiten.NewImageWithOptions),
		"NewShader":                              reflect.ValueOf(ebiten.NewShader),
		"NonZero":                                reflect.ValueOf(ebiten.NonZero),
		"ReadDebugInfo":                          reflect.ValueOf(ebiten.ReadDebugInfo),
		"RestoreWindow":                          reflect.ValueOf(ebiten.RestoreWindow),
		"RunGame":                                reflect.ValueOf(ebiten.RunGame),
		"RunGameWithOptions":                     reflect.ValueOf(ebiten.RunGameWithOptions),
		"ScheduleFrame":                          reflect.ValueOf(ebiten.ScheduleFrame),
		"ScreenSizeInFullscreen":                 reflect.ValueOf(ebiten.ScreenSizeInFullscreen),
		"SetCursorMode":                          reflect.ValueOf(ebiten.SetCursorMode),
		"SetCursorShape":                         reflect.ValueOf(ebiten.SetCursorShape),
		"SetFPSMode":                             reflect.ValueOf(ebiten.SetFPSMode),
		"SetFullscreen":                          reflect.ValueOf(ebiten.SetFullscreen),
		"SetInitFocused":                         reflect.ValueOf(ebiten.SetInitFocused),
		"SetMaxTPS":                              reflect.ValueOf(ebiten.SetMaxTPS),
		"SetMonitor":                             reflect.ValueOf(ebiten.SetMonitor),
		"SetRunnableOnUnfocused":                 reflect.ValueOf(ebiten.SetRunnableOnUnfocused),
		"SetScreenClearedEveryFrame":             reflect.ValueOf(ebiten.SetScreenClearedEveryFrame),
		"SetScreenFilterEnabled":                 reflect.ValueOf(ebiten.SetScreenFilterEnabled),
		"SetScreenTransparent":                   reflect.ValueOf(ebiten.SetScreenTransparent),
		"SetTPS":                                 reflect.ValueOf(ebiten.SetTPS),
		"SetVsyncEnabled":                        reflect.ValueOf(ebiten.SetVsyncEnabled),
		"SetWindowClosingHandled":                reflect.ValueOf(ebiten.SetWindowClosingHandled),
		"SetWindowDecorated":                     reflect.ValueOf(ebiten.SetWindowDecorated),
		"SetWindowFloating":                      reflect.ValueOf(ebiten.SetWindowFloating),
		"SetWindowIcon":                          reflect.ValueOf(ebiten.SetWindowIcon),
		"SetWindowMousePassthrough":              reflect.ValueOf(ebiten.SetWindowMousePassthrough),
		"SetWindowPosition":                      reflect.ValueOf(ebiten.SetWindowPosition),
		"SetWindowResizable":                     reflect.ValueOf(ebiten.SetWindowResizable),
		"SetWindowResizingMode":                  reflect.ValueOf(ebiten.SetWindowResizingMode),
		"SetWindowSize":                          reflect.ValueOf(ebiten.SetWindowSize),
		"SetWindowSizeLimits":                    reflect.ValueOf(ebiten.SetWindowSizeLimits),
		"SetWindowTitle":                         reflect.ValueOf(ebiten.SetWindowTitle),
		"StandardGamepadAxisLeftStickHorizontal": reflect.ValueOf(ebiten.StandardGamepadAxisLeftStickHorizontal),
		"StandardGamepadAxisLeftStickVertical":   reflect.ValueOf(ebiten.StandardGamepadAxisLeftStickVertical),
		"StandardGamepadAxisMax":                 reflect.ValueOf(ebiten.StandardGamepadAxisMax),
		"StandardGamepadAxisRightStickHorizontal": reflect.ValueOf(ebiten.StandardGamepadAxisRightStickHorizontal),
		"StandardGamepadAxisRightStickVertical":   reflect.ValueOf(ebiten.StandardGamepadAxisRightStickVertical),
		"StandardGamepadAxisValue":                reflect.ValueOf(ebiten.StandardGamepadAxisValue),
		"StandardGamepadButtonCenterCenter":       reflect.ValueOf(ebiten.StandardGamepadButtonCenterCenter),
		"StandardGamepadButtonCenterLeft":         reflect.ValueOf(ebiten.StandardGamepadButtonCenterLeft),
		"StandardGamepadButtonCenterRight":        reflect.ValueOf(ebiten.StandardGamepadButtonCenterRight),
		"StandardGamepadButtonFrontBottomLeft":    reflect.ValueOf(ebiten.StandardGamepadButtonFrontBottomLeft),
		"StandardGamepadButtonFrontBottomRight":   reflect.ValueOf(ebiten.StandardGamepadButtonFrontBottomRight),
		"StandardGamepadButtonFrontTopLeft":       reflect.ValueOf(ebiten.StandardGamepadButtonFrontTopLeft),
		"StandardGamepadButtonFrontTopRight":      reflect.ValueOf(ebiten.StandardGamepadButtonFrontTopRight),
		"StandardGamepadButtonLeftBottom":         reflect.ValueOf(ebiten.StandardGamepadButtonLeftBottom),
		"StandardGamepadButtonLeftLeft":           reflect.ValueOf(ebiten.StandardGamepadButtonLeftLeft),
		"StandardGamepadButtonLeftRight":          reflect.ValueOf(ebiten.StandardGamepadButtonLeftRight),
		"StandardGamepadButtonLeftStick":          reflect.ValueOf(ebiten.StandardGamepadButtonLeftStick),
		"StandardGamepadButtonLeftTop":            reflect.ValueOf(ebiten.StandardGamepadButtonLeftTop),
		"StandardGamepadButtonMax":                reflect.ValueOf(ebiten.StandardGamepadButtonMax),
		"StandardGamepadButtonRightBottom":        reflect.ValueOf(ebiten.StandardGamepadButtonRightBottom),
		"StandardGamepadButtonRightLeft":          reflect.ValueOf(ebiten.StandardGamepadButtonRightLeft),
		"StandardGamepadButtonRightRight":         reflect.ValueOf(ebiten.StandardGamepadButtonRightRight),
		"StandardGamepadButtonRightStick":         reflect.ValueOf(ebiten.StandardGamepadButtonRightStick),
		"StandardGamepadButtonRightTop":           reflect.ValueOf(ebiten.StandardGamepadButtonRightTop),
		"StandardGamepadButtonValue":              reflect.ValueOf(ebiten.StandardGamepadButtonValue),
		"SyncWithFPS":                             reflect.ValueOf(constant.MakeFromLiteral("-1", token.INT, 0)),
		"TPS":                                     reflect.ValueOf(ebiten.TPS),
		"Termination":                             reflect.ValueOf(&ebiten.Termination).Elem(),
		"TouchIDs":                                reflect.ValueOf(ebiten.TouchIDs),
		"TouchPosition":                           reflect.ValueOf(ebiten.TouchPosition),
		"UncappedTPS":                             reflect.ValueOf(constant.MakeFromLiteral("-1", token.INT, 0)),
		"UpdateStandardGamepadLayoutMappings":     reflect.ValueOf(ebiten.UpdateStandardGamepadLayoutMappings),
		"Vibrate":                                 reflect.ValueOf(ebiten.Vibrate),
		"VibrateGamepad":                          reflect.ValueOf(ebiten.VibrateGamepad),
		"Wheel":                                   reflect.ValueOf(ebiten.Wheel),
		"WindowPosition":                          reflect.ValueOf(ebiten.WindowPosition),
		"WindowResizingMode":                      reflect.ValueOf(ebiten.WindowResizingMode),
		"WindowResizingModeDisabled":              reflect.ValueOf(ebiten.WindowResizingModeDisabled),
		"WindowResizingModeEnabled":               reflect.ValueOf(ebiten.WindowResizingModeEnabled),
		"WindowResizingModeOnlyFullscreenEnabled": reflect.ValueOf(ebiten.WindowResizingModeOnlyFullscreenEnabled),
		"WindowSize":                              reflect.ValueOf(ebiten.WindowSize),
		"WindowSizeLimits":                        reflect.ValueOf(ebiten.WindowSizeLimits),

		// type definitions
		"Address":                    reflect.ValueOf((*ebiten.Address)(nil)),
		"Blend":                      reflect.ValueOf((*ebiten.Blend)(nil)),
		"BlendFactor":                reflect.ValueOf((*ebiten.BlendFactor)(nil)),
		"BlendOperation":             reflect.ValueOf((*ebiten.BlendOperation)(nil)),
		"ColorM":                     reflect.ValueOf((*ebiten.ColorM)(nil)),
		"ColorScale":                 reflect.ValueOf((*ebiten.ColorScale)(nil)),
		"ColorScaleMode":             reflect.ValueOf((*ebiten.ColorScaleMode)(nil)),
		"CompositeMode":              reflect.ValueOf((*ebiten.CompositeMode)(nil)),
		"CursorModeType":             reflect.ValueOf((*ebiten.CursorModeType)(nil)),
		"CursorShapeType":            reflect.ValueOf((*ebiten.CursorShapeType)(nil)),
		"DebugInfo":                  reflect.ValueOf((*ebiten.DebugInfo)(nil)),
		"DrawImageOptions":           reflect.ValueOf((*ebiten.DrawImageOptions)(nil)),
		"DrawRectShaderOptions":      reflect.ValueOf((*ebiten.DrawRectShaderOptions)(nil)),
		"DrawTrianglesOptions":       reflect.ValueOf((*ebiten.DrawTrianglesOptions)(nil)),
		"DrawTrianglesShaderOptions": reflect.ValueOf((*ebiten.DrawTrianglesShaderOptions)(nil)),
		"FPSModeType":                reflect.ValueOf((*ebiten.FPSModeType)(nil)),
		"FillRule":                   reflect.ValueOf((*ebiten.FillRule)(nil)),
		"Filter":                     reflect.ValueOf((*ebiten.Filter)(nil)),
		"FinalScreen":                reflect.ValueOf((*ebiten.FinalScreen)(nil)),
		"FinalScreenDrawer":          reflect.ValueOf((*ebiten.FinalScreenDrawer)(nil)),
		"Game":                       reflect.ValueOf((*ebiten.Game)(nil)),
		"GamepadAxisType":            reflect.ValueOf((*ebiten.GamepadAxisType)(nil)),
		"GamepadButton":              reflect.ValueOf((*ebiten.GamepadButton)(nil)),
		"GamepadID":                  reflect.ValueOf((*ebiten.GamepadID)(nil)),
		"GeoM":                       reflect.ValueOf((*ebiten.GeoM)(nil)),
		"GraphicsLibrary":            reflect.ValueOf((*ebiten.GraphicsLibrary)(nil)),
		"Image":                      reflect.ValueOf((*ebiten.Image)(nil)),
		"Key":                        reflect.ValueOf((*ebiten.Key)(nil)),
		"LayoutFer":                  reflect.ValueOf((*ebiten.LayoutFer)(nil)),
		"MonitorType":                reflect.ValueOf((*ebiten.MonitorType)(nil)),
		"MouseButton":                reflect.ValueOf((*ebiten.MouseButton)(nil)),
		"NewImageFromImageOptions":   reflect.ValueOf((*ebiten.NewImageFromImageOptions)(nil)),
		"NewImageOptions":            reflect.ValueOf((*ebiten.NewImageOptions)(nil)),
		"RunGameOptions":             reflect.ValueOf((*ebiten.RunGameOptions)(nil)),
		"Shader":                     reflect.ValueOf((*ebiten.Shader)(nil)),
		"StandardGamepadAxis":        reflect.ValueOf((*ebiten.StandardGamepadAxis)(nil)),
		"StandardGamepadButton":      reflect.ValueOf((*ebiten.StandardGamepadButton)(nil)),
		"TouchID":                    reflect.ValueOf((*ebiten.TouchID)(nil)),
		"Vertex":                     reflect.ValueOf((*ebiten.Vertex)(nil)),
		"VibrateGamepadOptions":      reflect.ValueOf((*ebiten.VibrateGamepadOptions)(nil)),
		"VibrateOptions":             reflect.ValueOf((*ebiten.VibrateOptions)(nil)),
		"WindowResizingModeType":     reflect.ValueOf((*ebiten.WindowResizingModeType)(nil)),

		// interface wrapper definitions
		"_FinalScreen":       reflect.ValueOf((*_github_com_hajimehoshi_ebiten_v2_FinalScreen)(nil)),
		"_FinalScreenDrawer": reflect.ValueOf((*_github_com_hajimehoshi_ebiten_v2_FinalScreenDrawer)(nil)),
		"_Game":              reflect.ValueOf((*_github_com_hajimehoshi_ebiten_v2_Game)(nil)),
		"_LayoutFer":         reflect.ValueOf((*_github_com_hajimehoshi_ebiten_v2_LayoutFer)(nil)),
	}
}

// _github_com_hajimehoshi_ebiten_v2_FinalScreen is an interface wrapper for FinalScreen type
type _github_com_hajimehoshi_ebiten_v2_FinalScreen struct {
	IValue               interface{}
	WBounds              func() image.Rectangle
	WClear               func()
	WDrawImage           func(img *ebiten.Image, options *ebiten.DrawImageOptions)
	WDrawRectShader      func(width int, height int, shader *ebiten.Shader, options *ebiten.DrawRectShaderOptions)
	WDrawTriangles       func(vertices []ebiten.Vertex, indices []uint16, img *ebiten.Image, options *ebiten.DrawTrianglesOptions)
	WDrawTrianglesShader func(vertices []ebiten.Vertex, indices []uint16, shader *ebiten.Shader, options *ebiten.DrawTrianglesShaderOptions)
	WFill                func(clr color.Color)
}

func (W _github_com_hajimehoshi_ebiten_v2_FinalScreen) Bounds() image.Rectangle {
	return W.WBounds()
}
func (W _github_com_hajimehoshi_ebiten_v2_FinalScreen) Clear() {
	W.WClear()
}
func (W _github_com_hajimehoshi_ebiten_v2_FinalScreen) DrawImage(img *ebiten.Image, options *ebiten.DrawImageOptions) {
	W.WDrawImage(img, options)
}
func (W _github_com_hajimehoshi_ebiten_v2_FinalScreen) DrawRectShader(width int, height int, shader *ebiten.Shader, options *ebiten.DrawRectShaderOptions) {
	W.WDrawRectShader(width, height, shader, options)
}
func (W _github_com_hajimehoshi_ebiten_v2_FinalScreen) DrawTriangles(vertices []ebiten.Vertex, indices []uint16, img *ebiten.Image, options *ebiten.DrawTrianglesOptions) {
	W.WDrawTriangles(vertices, indices, img, options)
}
func (W _github_com_hajimehoshi_ebiten_v2_FinalScreen) DrawTrianglesShader(vertices []ebiten.Vertex, indices []uint16, shader *ebiten.Shader, options *ebiten.DrawTrianglesShaderOptions) {
	W.WDrawTrianglesShader(vertices, indices, shader, options)
}
func (W _github_com_hajimehoshi_ebiten_v2_FinalScreen) Fill(clr color.Color) {
	W.WFill(clr)
}

// _github_com_hajimehoshi_ebiten_v2_FinalScreenDrawer is an interface wrapper for FinalScreenDrawer type
type _github_com_hajimehoshi_ebiten_v2_FinalScreenDrawer struct {
	IValue           interface{}
	WDrawFinalScreen func(screen ebiten.FinalScreen, offscreen *ebiten.Image, geoM ebiten.GeoM)
}

func (W _github_com_hajimehoshi_ebiten_v2_FinalScreenDrawer) DrawFinalScreen(screen ebiten.FinalScreen, offscreen *ebiten.Image, geoM ebiten.GeoM) {
	W.WDrawFinalScreen(screen, offscreen, geoM)
}

// _github_com_hajimehoshi_ebiten_v2_Game is an interface wrapper for Game type
type _github_com_hajimehoshi_ebiten_v2_Game struct {
	IValue  interface{}
	WDraw   func(screen *ebiten.Image)
	WLayout func(outsideWidth int, outsideHeight int) (screenWidth int, screenHeight int)
	WUpdate func() error
}

func (W _github_com_hajimehoshi_ebiten_v2_Game) Draw(screen *ebiten.Image) {
	W.WDraw(screen)
}
func (W _github_com_hajimehoshi_ebiten_v2_Game) Layout(outsideWidth int, outsideHeight int) (screenWidth int, screenHeight int) {
	return W.WLayout(outsideWidth, outsideHeight)
}
func (W _github_com_hajimehoshi_ebiten_v2_Game) Update() error {
	return W.WUpdate()
}

// _github_com_hajimehoshi_ebiten_v2_LayoutFer is an interface wrapper for LayoutFer type
type _github_com_hajimehoshi_ebiten_v2_LayoutFer struct {
	IValue   interface{}
	WLayoutF func(outsideWidth float64, outsideHeight float64) (screenWidth float64, screenHeight float64)
}

func (W _github_com_hajimehoshi_ebiten_v2_LayoutFer) LayoutF(outsideWidth float64, outsideHeight float64) (screenWidth float64, screenHeight float64) {
	return W.WLayoutF(outsideWidth, outsideHeight)
}
