// Code generated by 'yaegi extract github.com/hajimehoshi/ebiten/v2/vector'. DO NOT EDIT.

package symbols

import (
	"github.com/hajimehoshi/ebiten/v2/vector"
	"reflect"
)

func init() {
	Symbols["github.com/hajimehoshi/ebiten/v2/vector/vector"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Clockwise":        reflect.ValueOf(vector.Clockwise),
		"CounterClockwise": reflect.ValueOf(vector.CounterClockwise),
		"DrawFilledCircle": reflect.ValueOf(vector.DrawFilledCircle),
		"DrawFilledRect":   reflect.ValueOf(vector.DrawFilledRect),
		"LineCapButt":      reflect.ValueOf(vector.LineCapButt),
		"LineCapRound":     reflect.ValueOf(vector.LineCapRound),
		"LineCapSquare":    reflect.ValueOf(vector.LineCapSquare),
		"LineJoinBevel":    reflect.ValueOf(vector.LineJoinBevel),
		"LineJoinMiter":    reflect.ValueOf(vector.LineJoinMiter),
		"LineJoinRound":    reflect.ValueOf(vector.LineJoinRound),
		"StrokeCircle":     reflect.ValueOf(vector.StrokeCircle),
		"StrokeLine":       reflect.ValueOf(vector.StrokeLine),
		"StrokeRect":       reflect.ValueOf(vector.StrokeRect),

		// type definitions
		"Direction":     reflect.ValueOf((*vector.Direction)(nil)),
		"LineCap":       reflect.ValueOf((*vector.LineCap)(nil)),
		"LineJoin":      reflect.ValueOf((*vector.LineJoin)(nil)),
		"Path":          reflect.ValueOf((*vector.Path)(nil)),
		"StrokeOptions": reflect.ValueOf((*vector.StrokeOptions)(nil)),
	}
}
